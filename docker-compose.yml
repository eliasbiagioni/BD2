version: '3'
services:
  neo4j-bd2:
    container_name: neo4j-bd2
    build: 
      context: .
      dockerfile: Dockerfile.neo4j
    environment: 
      NEO4J_AUTH: neo4j/bd2
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_dbms_logs_query_enabled: "VERBOSE"
      NEO4J_dbms_logs_query_parameter__logging__enabled: "true"
      NEO4J_dbms_logs_query_time__logging__enabled: "true"
      NEO4J_dbms_logs_query_allocation__logging__enabled: "true"
      NEO4J_dbms_logs_query_page__logging__enabled: "true"
      NEO4J_dbms_track__query__cpu__time: "true"
      NEO4J_dbms_track__query__allocation: "true"
      apoc.import.file.use_neo4j_config: 'true'
      apoc.import.file.enabled: 'true'
      apoc.initializer.neo4j.1: 'CALL apoc.cypher.runFile("initialize-db.cypher")'
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
    ports: 
      - 7474:7474
      - 7687:7687
  
  mongo-bd2:
    container_name: mongo-bd2
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes: 
      - ./mongo/data:/data/db
      - ./mongo/log:/var/log/mongodb/
      - ./init-db/mongo-db/init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27017:27017